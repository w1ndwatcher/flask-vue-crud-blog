{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data() {\n    return {\n      title: null,\n      body: null,\n      error: null\n    };\n  },\n  methods: {\n    updateArticle() {\n      if (!this.title || !this.body) {\n        this.error = \"Please fill out all fields.\";\n      } else {\n        fetch(`http://localhost:5000/update/${this.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: this.title,\n            body: this.body\n          })\n        }).then(resp => resp.json()).then(() => {\n          this.$router.push({\n            name: 'home'\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    if (to.params.id !== undefined) {\n      fetch(`http://localhost:5000/get/${to.params.id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => resp.json()).then(data => {\n        return next(vm => (vm.title = data.title, vm.body = data.body));\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      return next();\n    }\n  }\n};","map":{"version":3,"names":["props","id","type","Number","String","required","data","title","body","error","methods","updateArticle","fetch","method","headers","JSON","stringify","then","resp","json","$router","push","name","catch","console","log","beforeRouteEnter","to","from","next","params","undefined","vm"],"sources":["src/components/ArticleEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n        <h3>Edit your Article</h3>\r\n        <div v-if=\"error\" class=\"alert alert-warning alert-dismissible fade show mt-4\" role=\"alert\">\r\n            <strong>{{ error }}</strong>\r\n        </div>\r\n        <form @submit.prevent=\"updateArticle\">\r\n            <input type=\"text\" class=\"form-control mt-4\" placeholder=\"Please enter your title.\" v-model=\"title\">\r\n            <br>\r\n            <textarea rows=\"10\" class=\"form-control\" placeholder=\"Please enter your description.\" v-model=\"body\"></textarea>\r\n            <button class=\"btn btn-success mt-4\">Save Changes</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        id: {\r\n            type: [Number, String],\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            title: null,\r\n            body: null,\r\n            error: null\r\n        }\r\n    },\r\n    methods: {\r\n        updateArticle() {\r\n            if(!this.title || !this.body) {\r\n                this.error = \"Please fill out all fields.\"\r\n            } else {\r\n                fetch(`http://localhost:5000/update/${this.id}`, {\r\n                    method:\"PUT\",\r\n                    headers:{\r\n                        \"Content-Type\":\"application/json\"\r\n                    },\r\n                    body: JSON.stringify({title:this.title, body:this.body})\r\n                })\r\n                .then(resp => resp.json())\r\n                .then(() => {\r\n                    this.$router.push({name:'home'})\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    beforeRouteEnter(to, from, next) {\r\n        if(to.params.id !== undefined) {\r\n            fetch(`http://localhost:5000/get/${to.params.id}`, {\r\n                method:\"GET\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                }\r\n            })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                return next(vm => (vm.title=data.title, vm.body=data.body))\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        } else {\r\n            return next()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";AAgBA;EACAA,KAAA;IACAC,EAAA;MACAC,IAAA,GAAAC,MAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,IAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACA,UAAAJ,KAAA,UAAAC,IAAA;QACA,KAAAC,KAAA;MACA;QACAG,KAAA,sCAAAX,EAAA;UACAY,MAAA;UACAC,OAAA;YACA;UACA;UACAN,IAAA,EAAAO,IAAA,CAAAC,SAAA;YAAAT,KAAA,OAAAA,KAAA;YAAAC,IAAA,OAAAA;UAAA;QACA,GACAS,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,IACAF,IAAA;UACA,KAAAG,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;QACA,GACAC,KAAA,CAAAd,KAAA;UACAe,OAAA,CAAAC,GAAA,CAAAhB,KAAA;QACA;MACA;IACA;EACA;EACAiB,iBAAAC,EAAA,EAAAC,IAAA,EAAAC,IAAA;IACA,IAAAF,EAAA,CAAAG,MAAA,CAAA7B,EAAA,KAAA8B,SAAA;MACAnB,KAAA,8BAAAe,EAAA,CAAAG,MAAA,CAAA7B,EAAA;QACAY,MAAA;QACAC,OAAA;UACA;QACA;MACA,GACAG,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,IACAF,IAAA,CAAAX,IAAA;QACA,OAAAuB,IAAA,CAAAG,EAAA,KAAAA,EAAA,CAAAzB,KAAA,GAAAD,IAAA,CAAAC,KAAA,EAAAyB,EAAA,CAAAxB,IAAA,GAAAF,IAAA,CAAAE,IAAA;MACA,GACAe,KAAA,CAAAd,KAAA;QACAe,OAAA,CAAAC,GAAA,CAAAhB,KAAA;MACA;IACA;MACA,OAAAoB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}